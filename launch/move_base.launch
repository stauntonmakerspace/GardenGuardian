<launch>
   <!-- Run the map server -->
   <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
      <rosparam>
      odom_frame: odom
      base_frame: base_link
      map_frame: map

      map_update_interval: 0.5 # Publish new map

      maxUrange: 5.5 # Should be just less than sensor range
      maxRange: 6.1 # Should be just greater than sensor range
      particles: 100 # Increased from 80

      # Update frequencies
      linearUpdate: 0.3
      angularUpdate: 0.5
      temporalUpdate: 2.0
      resampleThreshold: 0.5

      # Initial Map Size
      xmin: -100.0
      ymin: -100.0
      xmax: 100.0
      ymax: 100.0
      delta: 0.05

      # All default
      sigma: 0.05
      kernelSize: 1
      lstep: 0.05
      astep: 0.05
      iterations: 5
      lsigma: 0.075
      ogain: 3.0
      lskip: 0
      llsamplerange: 0.01
      llsamplestep: 0.01
      lasamplerange: 0.005
      lasamplestep: 0.005

    </rosparam>
   </node>

  <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform_node" respawn="true">
 

<param name="odom0" value="/camera/sample/odom"/>

<rosparam param="odom0_config">[true,  true,  true,
                                false, false, false,
                                false, false, false,
                                false, false, false,
                                false, false, false]</rosparam>
<param name="odom0_differential" value="false"/>

    <param name="magnetic_declination_radians" value="0"/>
	<param name="wait_for_datum" value="false"/>
	<param name="zero_altitude" value="true"/>
	<param name="two_d_mode" value="true"/>
	<param name="broadcast_utm_transform" value="true"/>
    <param name="yaw_offset" value="0"/>

    <remap from="/imu/data" to="/imu/data" />
    <remap from="/gps/fix" to="/navsat/fix" />
    <remap from="/odometry/filtered" to="/camera/odom/sample" />

  </node>

   <!--- Run AMCL -->
   <!-- <include file="$(find amcl)/examples/amcl_diff.launch" /> -->

   <rosparam command="load" file="$(find garden_guardian)/params/ekf_params.yaml" />
   <rosparam command="load" file="$(find garden_guardian)/params/navsat_params.yaml" />
   

   <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <rosparam file="$(find garden_guardian)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find garden_guardian)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find garden_guardian)/params/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find garden_guardian)/params/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find garden_guardian)/params/base_local_planner_params.yaml" command="load" />
      <!--  -->
      <rosparam file="$(find garden_guardian)/params/move_base_params.yaml" command="load" />
     
      <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
      <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>

      <remap from="odom" to="/outdoor_waypoint_nav/odometry/filtered" />
   
   </node>

</launch> 
